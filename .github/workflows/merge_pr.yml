#name: Deploying MS to AWS Env
#on:
#  push:
#    branches: [ "main" ]
#
#jobs:
#  build_and_deploy_to_aws:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - uses: actions/setup-java@v4
#        with:
#          distribution: temurin
#          java-version: 19
#
#      - name: Setup Gradle
#        uses: gradle/gradle-build-action@v3
#
#      - name: Execute Gradle build
#        run: ./gradlew build
#
#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v4
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: us-east-2
#
#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v2
#
#      - name: Build and Push Docker
#        env:
#          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          REPOSITORY: ms-users-group6263
#          IMAGE_TAG: latest
#        run: |
#          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
#          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
#
#      - uses: azure/setup-kubectl@v4
#        with:
#          version: 'v1.29.0' # default is latest stable
#        id: install
#
#      - name: Update kube config
#        run: |
#          aws sts get-caller-identity
#          aws eks update-kubeconfig --region us-east-2 --name orient
#          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
#          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          export AWS_DEFAULT_REGION=us-east-2
#          kubectl config get-contexts
#          kubectl get pods
#
#      - name: Deploy to EKS
#        run: |
#           kubectl get pods
##          kubectl apply -f infra/deployment.yml
##          kubectl apply -f infra/service.yml
##          kubectl rollout restart -f infra/deployment.yml
#
